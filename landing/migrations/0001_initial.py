# Generated by Django 5.2 on 2025-07-20 05:52

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Brand",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("slug", models.SlugField(blank=True, unique=True)),
                ("description", models.TextField(blank=True)),
                ("logo", models.CharField(blank=True, max_length=255, null=True)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("slug", models.SlugField(blank=True, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "image",
                    models.CharField(
                        blank=True,
                        help_text="URL for the category image",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "verbose_name_plural": "Categories",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="HomepageVideo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Title for the homepage video", max_length=200
                    ),
                ),
                (
                    "description",
                    models.TextField(help_text="Short description for the video"),
                ),
                (
                    "video_file",
                    models.FileField(
                        help_text="Upload video file (MP4 format recommended)",
                        upload_to="videos/",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this video is currently active on the homepage",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Homepage Video",
                "verbose_name_plural": "Homepage Videos",
            },
        ),
        migrations.CreateModel(
            name="RentalCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("slug", models.SlugField(blank=True, unique=True)),
                ("description", models.TextField()),
                ("image", models.CharField(blank=True, max_length=255, null=True)),
                ("daily_rate", models.DecimalField(decimal_places=2, max_digits=10)),
                ("weekly_rate", models.DecimalField(decimal_places=2, max_digits=10)),
                ("monthly_rate", models.DecimalField(decimal_places=2, max_digits=10)),
                ("is_active", models.BooleanField(default=True)),
                ("date_added", models.DateTimeField(auto_now_add=True)),
                ("date_updated", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name_plural": "Rental Categories",
                "ordering": ["daily_rate"],
            },
        ),
        migrations.CreateModel(
            name="RestorationGallery",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Title of the restoration project (e.g., '1972 Vespa Sprint')",
                        max_length=200,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Description of the restoration work done"
                    ),
                ),
                (
                    "before_image",
                    models.CharField(
                        help_text="URL for the 'before restoration' image",
                        max_length=255,
                    ),
                ),
                (
                    "after_image",
                    models.CharField(
                        help_text="URL for the 'after restoration' image",
                        max_length=255,
                    ),
                ),
                (
                    "year",
                    models.PositiveIntegerField(
                        blank=True, help_text="Year of the scooter", null=True
                    ),
                ),
                (
                    "make",
                    models.CharField(
                        blank=True,
                        help_text="Make of the scooter (e.g., Vespa, Honda)",
                        max_length=100,
                    ),
                ),
                (
                    "model",
                    models.CharField(
                        blank=True,
                        help_text="Model of the scooter (e.g., Sprint, Elite)",
                        max_length=100,
                    ),
                ),
                (
                    "restoration_type",
                    models.CharField(
                        choices=[
                            ("cosmetic", "Cosmetic Restoration"),
                            ("mechanical", "Mechanical Restoration"),
                            ("full", "Full Restoration"),
                            ("custom", "Custom Project"),
                        ],
                        default="full",
                        help_text="Type of restoration performed",
                        max_length=50,
                    ),
                ),
                (
                    "is_featured",
                    models.BooleanField(
                        default=False,
                        help_text="Show this restoration in the main gallery",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "date_completed",
                    models.DateField(
                        blank=True,
                        help_text="Date when the restoration was completed",
                        null=True,
                    ),
                ),
                ("date_added", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name_plural": "Restoration Gallery",
                "ordering": ["-date_added"],
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("slug", models.SlugField(blank=True, unique=True)),
                ("description", models.TextField()),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "sale_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("image", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "image_url",
                    models.CharField(
                        blank=True,
                        help_text="URL for the product image (used if no image is uploaded)",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "thumbnail_1",
                    models.CharField(
                        blank=True,
                        help_text="URL for the first thumbnail image",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "thumbnail_2",
                    models.CharField(
                        blank=True,
                        help_text="URL for the second thumbnail image",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "thumbnail_3",
                    models.CharField(
                        blank=True,
                        help_text="URL for the third thumbnail image",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "thumbnail_4",
                    models.CharField(
                        blank=True,
                        help_text="URL for the fourth thumbnail image",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("stock", models.PositiveIntegerField(default=0)),
                ("is_featured", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("date_added", models.DateTimeField(auto_now_add=True)),
                ("date_updated", models.DateTimeField(auto_now=True)),
                (
                    "brand",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products",
                        to="landing.brand",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products",
                        to="landing.category",
                    ),
                ),
            ],
            options={
                "ordering": ["-date_added"],
            },
        ),
    ]
